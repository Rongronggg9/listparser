name: "Test"

on:
  - "push"
  - "pull_request"

jobs:
  build:
    name: "Build wheel"
    runs-on: "ubuntu-latest"
    outputs:
      wheel-filename: "${{ steps.get-filename.outputs.wheel-filename }}"
    steps:
      - name: "Checkout branch"
        uses: "actions/checkout@v3"

      - name: "Setup Python"
        id: "setup-python"
        uses: "actions/setup-python@v4"
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            pyproject.toml
            tox.ini
            .github/workflows/test.yaml

      - name: "Build the project"
        run: "pip wheel ."

      - name: "Identify the wheel filename"
        id: "get-filename"
        run: 'echo "wheel-filename=$(ls -1 *.whl | head -n 1)" >> $GITHUB_OUTPUT'

      - name: "Upload the build artifact"
        uses: "actions/upload-artifact@v3"
        with:
          name: "listparser-${{ github.sha }}.whl"
          path: "${{ steps.get-filename.outputs.wheel-filename }}"
          retention-days: 1

  test:
    needs: "build"

    strategy:
      matrix:
        run:
          - os:
              id: "ubuntu-latest"
              name: "Ubuntu"
            pythons: |
              pypy3.9
              3.7
              3.8
              3.9
              3.10
              3.11
            tox-environments:
              - "py311-http-lxml-ci"
              - "py310-http-lxml-ci"
              - "py39-http-lxml-ci"
              - "py38-http-lxml-ci"
              - "py37-http-lxml-ci"
              - "py37-ci"
              - "py37-minimum-dependencies-ci"
              - "pypy39-ci"

          # Test lowest and highest versions on Windows.
          - os:
              id: "windows-latest"
              name: "Windows"
            pythons: |
              3.7
              3.11
            tox-environments:
              - "py311-ci"
              - "py37-ci"

          # Test lowest and highest versions on Mac.
          - os:
              name: "MacOS"
              id: "macos-latest"
            pythons: |
              3.7
              3.11
            tox-environments:
              - "py37-ci"
              - "py311-ci"

    name: "Test on ${{ matrix.run.os.name }}"
    runs-on: "${{ matrix.run.os.id }}"
    steps:
      # The week number is used for cache-busting.
      - name: "Identify week number"
        shell: "bash"
        run: "date +'%V' > week-number.txt"

      - name: "Checkout branch"
        uses: "actions/checkout@v3"

      - name: "Setup Pythons"
        id: "setup-python"
        uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.run.pythons }}"
          # Cache packages that pip downloads.
          # This does not cache the installed files.
          cache: "pip"
          cache-dependency-path: |
            .github/workflows/test.yaml
            pyproject.toml
            tox.ini
            week-number.txt

      - name: "Restore cache"
        id: "restore-cache"
        uses: "actions/cache@v3"
        with:
          path: |
            .venv/
            .tox/
          key: "cache-os=${{ matrix.run.os.id }}-hash=${{ hashFiles('.github/workflows/test.yaml', 'pyproject.toml', 'tox.ini', 'week-number.txt') }}"

      - name: "Identify venv path"
        shell: "bash"
        run: "echo 'venv-path=${{ runner.os == 'Windows' && '.venv/Scripts' || '.venv/bin' }}' >> $GITHUB_ENV"

      - name: "Create a virtual environment"
        if: "steps.restore-cache.outputs.cache-hit == false"
        run: |
          python -m venv .venv
          ${{ env.venv-path }}/python -m pip install --upgrade pip setuptools wheel
          ${{ env.venv-path }}/pip install tox

      - name: "Download the build artifact"
        uses: "actions/download-artifact@v3"
        with:
          name: "listparser-${{ github.sha }}.whl"

      - name: "Test"
        run: >
          ${{ env.venv-path }}/tox run
          --installpkg "${{ needs.build.outputs.wheel-filename }}"
          -e ${{ join(matrix.run.tox-environments, ',') }}
